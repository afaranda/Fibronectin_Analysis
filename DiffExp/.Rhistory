"ensembl_gene_id",
"description",
"FC", "logFC",
"FDR", "Group_1",
"Group_2", "Avg1", "Avg2"
)
ss_master<-bind_rows(
ss_master,
ds<-ds[,cols]
)
}
print("########## Confirm Unique Gene IDs in each Contrast (Stat)#########")
for( i in unique(ss_master$Group_1)){
for(j in unique(ss_master$Group_2)){
val<-ss_master %>% filter(Group_1 ==i, Group_2==j)
if(nrow(val) > 0){
print(
paste(i,j,
"Rows:", nrow(val),
"Unique_Genes:", length(unique(val$GeneID))
)
)
}
}
}
ugl=unique(ss_master$GeneID)
psize<-500
nparts<-1+(length(ugl) %/% psize)
partitions=list()
for( i in 1:nparts){
g=(1+(i-1)*psize):(i*psize)
g<-g[g<=length(ugl)]
partitions[[i]]<-ugl[g]
}
# Write Partitions to columns in a spreadsheet, manually retrieve data for each partition
setwd(iSyteDir)
fn<-"iSyte_GeneLists.xlsx"
wb<-createWorkbook()
addWorksheet(wb,"GeneLists")
cells<-expand.grid(row=1:psize, col=1:nparts)
tx<-createStyle(numFmt="TEXT")
addStyle(wb, 1, rows=cells$row, cols=cells$col, style=tx)
for(i in 1:length(partitions)){
writeData(wb,1,partitions[[i]], i,1)
}
saveWorkbook(wb, fn, overwrite =T )
setwd(iSyteDir)
p<-read.table("6_iSyTE_Pvalue.txt", header=T, stringsAsFactors = F)
iSyteCleaner<-function(x, type="Pvalue"){
q<-melt(x, id.vars = "Symbol")
# Strip "Dev" tag out of melted column headers
q$variable<-gsub("Dev","",as.character(q$variable))
q$variable<-gsub(".PVal.", "", q$variable)
# Strip the platform outy of melted headers to get the time interval
q$Interval<-gsub(
'affy430', '', gsub(
'affy430a', '', gsub(
'lumi1', '', gsub(
'lumi2', '',
q$variable
)
)
)
)
q$Platform<-apply(
q[,c('variable', 'Interval')], 1,
function(x)gsub(x[2], '', x[1])
)
q<-q[,c('Symbol', 'Platform', 'Interval', 'value')]
names(q)[grep('value', names(q))] <-type
q
}
fc<-data.frame()
for(i in list.files(pattern="FoldChange")){
p<-read.table(i, header=T, stringsAsFactors = F)
q<-iSyteCleaner(p, type = "FoldChange")
fc<-bind_rows(fc, q)
}
pv<-data.frame()
for(i in list.files(pattern="Pvalue")){
p<-read.table(i, header=T, stringsAsFactors = F)
q<-iSyteCleaner(p, type = "Pvalue")
pv<-bind_rows(pv, q)
}
# Helper function convert fold change to Log2 fold change
logify<-function(x, base=2){
if(x >= 0){
return (log(x, base))
}
else if( x < 0){
return( log( 1/abs(x), base ))
}
}
iSyte<-inner_join(pv, fc, by=c('Symbol', 'Platform', 'Interval'))
iSyte<-iSyte %>%
filter(Platform != "" & Interval != "Rank" & FoldChange !="-")
iSyte$Pvalue<-as.numeric(iSyte$Pvalue)
iSyte$FoldChange<-sapply(as.numeric(iSyte$FoldChange), logify)
head(iSyte)
unique((iSyte %>% filter(Platform == 'affy430'))$Interval)
unique((iSyte %>% filter(Platform == 'lumi1'))$Interval)
unique((iSyte %>% filter(Platform == 'lumi2'))$Interval)
head(ss_master)
query<-function(
isy=iSyte, deg=ss_master,
tp="P0", pl="affy430",
gr1="WT_0_Hour", gr2="WT_48_Hour",
mle = 10
){
isy<-isy %>%
filter(Platform == pl & Interval == tp) %>%
rename(
LensEnrichment = FoldChange,
LensPvalue = Pvalue,
GeneID = symbols
) %>%
filter(abs(LensEnrichment) > mle)
deg<-deg %>% filter(Group_1 == gr1 & Group_2 == gr2)
out<-inner_join(
deg, isy, by = 'GeneID'
)
out
}
query()
query<-function(
isy=iSyte, deg=ss_master,
tp="P0", pl="affy430",
gr1="WT_0_Hour", gr2="WT_48_Hour",
mle = 10
){
isy<-isy %>%
filter(Platform == pl & Interval == tp) %>%
rename(
LensEnrichment = FoldChange,
LensPvalue = Pvalue,
GeneID = symbols
) %>%
filter(abs(LensEnrichment) > mle)
deg<-deg %>% filter(Group_1 == gr1 & Group_2 == gr2)
out<-inner_join(deg, isy, by ='GeneID')
out
}
query()
GeneID
query<-function(
isy=iSyte, deg=ss_master,
tp="P0", pl="affy430",
gr1="WT_0_Hour", gr2="WT_48_Hour",
mle = 10
){
isy<-isy %>%
filter(Platform == pl & Interval == tp) %>%
rename(
LensEnrichment = FoldChange,
LensPvalue = Pvalue,
GeneID = Symbol
) %>%
filter(abs(LensEnrichment) > mle)
deg<-deg %>% filter(Group_1 == gr1 & Group_2 == gr2)
out<-inner_join(deg, isy, by ='GeneID')
out
}
GeneID
query()
query()$LensPvalue
nrow(query())
query<-function(
isy=iSyte, deg=ss_master,
tp="P0", pl="affy430",
gr1="WT_0_Hour", gr2="WT_48_Hour",
mle = 1
){
isy<-isy %>%
filter(Platform == pl & Interval == tp) %>%
rename(
LensEnrichment = FoldChange,
LensPvalue = Pvalue,
GeneID = Symbol
) %>%
filter(abs(LensEnrichment) > mle)
deg<-deg %>% filter(Group_1 == gr1 & Group_2 == gr2)
out<-inner_join(deg, isy, by ='GeneID')
out
}
nrow(query())
query<-function(
isy=iSyte, deg=ss_master,
tp="P0", pl="affy430",
gr1="WT_0_Hour", gr2="WT_48_Hour",
mle = 1
){
isy<-isy %>%
filter(Platform == pl & Interval == tp &Pvalue < 0.05) %>%
rename(
LensEnrichment = FoldChange,
LensPvalue = Pvalue,
GeneID = Symbol
) %>%
filter(abs(LensEnrichment) > mle)
deg<-deg %>% filter(Group_1 == gr1 & Group_2 == gr2)
out<-inner_join(deg, isy, by ='GeneID')
out
}
nrow(query())
qplot(LogFC, LensEnrichmentquery())
library(ggplot2)
library(ggplot)
install.packages("ggfortify")
library(ggplot)
library(ggplot2)
qplot(LogFC, LensEnrichment,query())
qplot(LogFC, LensEnrichment, data=query())
qplot(logFC, LensEnrichment, data=query())
qplot(logFC, LensEnrichment, data=query( mle = 5))
qplot(logFC, LensEnrichment, data=query( mle = 2))
qplot(logFC, LensEnrichment, data=query( mle = 1))
print("########## Confirm Unique Gene IDs in  each Contrast (Bio)#########")
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P60", Platform == "lumi2", Pvalue<0.05, abs(FoldChange) > 20), by=c("GeneID" = "Symbol"))
x
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P52", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
x
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P50", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
x
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
x
iSyte
ss_master
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange)
)
iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange))
ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour")
a<-(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour")$GeneID
)
a<-(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"))$GeneID
a
b<-(iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange)))$Symbol
b
intersect(a, b)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
nrow()
nrow(x)
a<-(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"))
b<-(iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange)))
inner_join(a, b)
inner_join(a, b, by=c("GeneID" = "Symbol"))
x=inner_join(a, b, by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
iSyte<-inner_join(pv, fc, by=c('Symbol', 'Platform', 'Interval'))
iSyte<-iSyte %>%
filter(Platform != "" & Interval != "Rank" & FoldChange !="-")
iSyte$Pvalue<-as.numeric(iSyte$Pvalue)
iSyte$FoldChange<-as.numeric(iSyte$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 10), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
iSyte<-inner_join(pv, fc, by=c('Symbol', 'Platform', 'Interval'))
iSyte<-iSyte %>%
filter(Platform != "" & Interval != "Rank" & FoldChange !="-")
iSyte$Pvalue<-as.numeric(iSyte$Pvalue)
#iSyte$FoldChange<-as.numeric(iSyte$FoldChange)
iSyte$FoldChange<-sapply(as.numeric(iSyte$FoldChange), logify)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 10), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 1), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 2), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 3), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 1), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
qplot(logFC, LensEnrichment, data=query( mle = 1))
qplot(logFC, LensEnrichment, data=query( mle = 0.5))
qplot(logFC, LensEnrichment, data=query( mle = 0.1))
qplot(logFC, LensEnrichment, data=query( mle = 2))
qplot(logFC, LensEnrichment, data=query( mle = 3))
qplot(logFC, LensEnrichment, data=query( mle = 2))
qplot(logFC, LensEnrichment, data=query( mle = 1))
qplot(logFC, LensEnrichment, data=query( mle = 0))
qplot(logFC, LensEnrichment, data=query( mle = 2))
qplot(y=logFC, x=LensEnrichment, data=query( mle = 2))
qplot(x=logFC, y=LensEnrichment, data=query( mle = 2))
qplot(x=logFC, y=LensEnrichment, data=query( mle = 2)) +
labs(x="Log2 Fold Change in the lens at P0", y = "Log2 Fold Change 0 vs 48 Hours Wildtype")
qplot(x=logFC, y=LensEnrichment, data=query(tp=52 mle = 2)) +
labs(x="Log2 Fold Change in the lens at P0", y = "Log2 Fold Change 0 vs 48 Hours Wildtype")
qplot(x=logFC, y=LensEnrichment, data=query(tp=52, mle = 2)) +
labs(x="Log2 Fold Change in the lens at P0", y = "Log2 Fold Change 0 vs 48 Hours Wildtype")
qplot(x=logFC, y=LensEnrichment, data=query(tp=2, mle = 2)) +
labs(x="Log2 Fold Change in the lens at P0", y = "Log2 Fold Change 0 vs 48 Hours Wildtype")
qplot(x=logFC, y=LensEnrichment, data=query(tp="P2", mle = 2)) +
labs(x="Log2 Fold Change in the lens at P0", y = "Log2 Fold Change 0 vs 48 Hours Wildtype")
qplot(x=logFC, y=LensEnrichment, data=query(tp="P52", mle = 2)) +
labs(x="Log2 Fold Change in the lens at P0", y = "Log2 Fold Change 0 vs 48 Hours Wildtype")
qplot(x=logFC, y=LensEnrichment, data=query(tp="P50", mle = 2)) +
labs(x="Log2 Fold Change in the lens at P0", y = "Log2 Fold Change 0 vs 48 Hours Wildtype")
qplot(x=logFC, y=LensEnrichment, data=query(tp="P56", mle = 2)) +
labs(x="Log2 Fold Change in the lens at P0", y = "Log2 Fold Change 0 vs 48 Hours Wildtype")
qplot(x=logFC, y=LensEnrichment, data=query(tp="P56", mle = 1)) +
labs(x="Log2 Fold Change in the lens at P56", y = "Log2 Fold Change 0 vs 48 Hours Wildtype")
qplot(x=logFC, y=LensEnrichment, data=query(tp="P56", mle = 1)) +
labs(y="Log2 Fold Change in the lens at P56", x = "Log2 Fold Change 0 vs 48 Hours Wildtype")
qplot(x=logFC, y=LensEnrichment, data=query(tp="P56", mle = 0)) +
labs(y="Log2 Fold Change in the lens at P56", x = "Log2 Fold Change 0 vs 48 Hours Wildtype")
ag_master<-data.frame(stringsAsFactors = F)
ss_master<-data.frame(stringsAsFactors = F)
for (dataFile in degDataFiles){
contrast<-gsub("_expressedTags-all.txt$","", dataFile)
# Load in DEGs
dg<-read.table(dataFile, sep="\t", quote="", header=T, stringsAsFactors = F)
samples<-names(dg)[grep("_GeneCount.cpm", names(dg))]
print(paste("############ FILTER DEG: ",contrast, "##########"))
# Add Columns for Filtering based on statistical Criteria
print(paste("CPM Present Cols:", paste(samples, collapse=" "), sep= " "))
dg$Cpm.Present<-apply(dg[, samples],
1, function(x) sum(x > 1) >=2
)
# Setup for RPKM Filtering Criteria
samples<-gsub("_GeneCount.cpm", "_RPKM", samples)
print(paste("RPKM Filtering Cols:", paste(samples, collapse=" "), sep=" "))
dg$Avg1<-apply(dg[,samples[1:3]], 1, mean)
dg$Avg2<-apply(dg[,samples[4:6]], 1, mean)
dg$Group_1<-unlist(strsplit(contrast,"_vs_"))[1]
dg$Group_2<-unlist(strsplit(contrast,"_vs_"))[2]
#names(dg)[grep("^Avg", names(dg))]<-paste(unlist(strsplit(contrast,"_vs_")), "_Average_RPKM", sep="")
dg$RPKM_gt2_Either_Cond<-apply(dg[,grep("^Avg", names(dg))], 1, function(x) (x[1] > 2) |(x[2] > 2) )
dg$RPKM_Diff_gt2<-apply(dg[,grep("^Avg", names(dg))], 1, function(x) abs(x[1]-x[2]) > 2)
# Get Statistically Significant Genes
ds<-dg %>% filter(abs(logFC) > 1 & FDR < 0.05) # & Cpm.Present == T) -- CPM Filter already applied
# Get Biologically significant genes based on the following criteria
db<-dg %>% filter(abs(logFC) > 1 & FDR < 0.05 & RPKM_gt2_Either_Cond == T & RPKM_Diff_gt2 == T)
# Reorder Columns For readability, drop sample specific columns
cols<-c("GeneID",
"ensembl_gene_id",
"description",
"FC", "logFC",
"FDR", "Group_1",
"Group_2", "Avg1", "Avg2"
)
ag_master<-bind_rows(
ag_master,
dg<-dg[,cols]
)
ss_master<-bind_rows(
ss_master,
ds<-ds[,cols]
)
}
setwd(wd)
wd<-getwd()
outDir<-paste(wd,'DiffExp', sep="/")
iSyteDir<-paste(wd, 'iSyte_Data', sep="/")
# Import data tables
setwd(outDir)
degDataFiles<-list.files(pattern="expressedTags-all.txt$")
# Function that converts short names to descriptive filenames
descName<-function(x){
x<-gsub('WT_0_Hour', 'Wildtype-0-Hour', x)
x<-gsub('WT_48_Hour', 'Wildtype-48-Hour', x)
x<-gsub('FN_0_Hour', 'FNcKO-0-Hour', x)
x<-gsub('FN_48_Hour', 'FNcKO-48-Hour', x)
}
ag_master<-data.frame(stringsAsFactors = F)
ss_master<-data.frame(stringsAsFactors = F)
for (dataFile in degDataFiles){
contrast<-gsub("_expressedTags-all.txt$","", dataFile)
# Load in DEGs
dg<-read.table(dataFile, sep="\t", quote="", header=T, stringsAsFactors = F)
samples<-names(dg)[grep("_GeneCount.cpm", names(dg))]
print(paste("############ FILTER DEG: ",contrast, "##########"))
# Add Columns for Filtering based on statistical Criteria
print(paste("CPM Present Cols:", paste(samples, collapse=" "), sep= " "))
dg$Cpm.Present<-apply(dg[, samples],
1, function(x) sum(x > 1) >=2
)
# Setup for RPKM Filtering Criteria
samples<-gsub("_GeneCount.cpm", "_RPKM", samples)
print(paste("RPKM Filtering Cols:", paste(samples, collapse=" "), sep=" "))
dg$Avg1<-apply(dg[,samples[1:3]], 1, mean)
dg$Avg2<-apply(dg[,samples[4:6]], 1, mean)
dg$Group_1<-unlist(strsplit(contrast,"_vs_"))[1]
dg$Group_2<-unlist(strsplit(contrast,"_vs_"))[2]
#names(dg)[grep("^Avg", names(dg))]<-paste(unlist(strsplit(contrast,"_vs_")), "_Average_RPKM", sep="")
dg$RPKM_gt2_Either_Cond<-apply(dg[,grep("^Avg", names(dg))], 1, function(x) (x[1] > 2) |(x[2] > 2) )
dg$RPKM_Diff_gt2<-apply(dg[,grep("^Avg", names(dg))], 1, function(x) abs(x[1]-x[2]) > 2)
# Get Statistically Significant Genes
ds<-dg %>% filter(abs(logFC) > 1 & FDR < 0.05) # & Cpm.Present == T) -- CPM Filter already applied
# Get Biologically significant genes based on the following criteria
db<-dg %>% filter(abs(logFC) > 1 & FDR < 0.05 & RPKM_gt2_Either_Cond == T & RPKM_Diff_gt2 == T)
# Reorder Columns For readability, drop sample specific columns
cols<-c("GeneID",
"ensembl_gene_id",
"description",
"FC", "logFC",
"FDR", "Group_1",
"Group_2", "Avg1", "Avg2"
)
ag_master<-bind_rows(
ag_master,
dg<-dg[,cols]
)
ss_master<-bind_rows(
ss_master,
ds<-ds[,cols]
)
}
q2<-data=query(deg=ag_master, tp="P56", mle = 0, gr1="WT_48_Hours", gr2 = "FN_48_Hours" )
q2<-query(deg=ag_master, tp="P56", mle = 0, gr1="WT_48_Hours", gr2 = "FN_48_Hours" )
head9q2
head(q2)
q2<-query(deg=ag_master, tp="P56", mle = 0, gr1="FN_0_Hours", gr2 = "FN_48_Hours" )
head(q2)
nrow(ag_master)
q2<-query(deg=ag_master, tp="P56", mle = 0, gr1="WT_0_Hours", gr2 = "WT_48_Hours" )
nrow(ag_master)
q2<-query(deg=ag_master, tp="P56", mle = 0, gr1="WT_0_Hours", gr2 = "WT_48_Hours" )
head(q2)
query<-function(
isy=iSyte, deg=ss_master,
tp="P0", pl="affy430",
gr1="WT_0_Hour", gr2="WT_48_Hour",
mle = 1
){
isy<-isy %>%
filter(Platform == pl & Interval == tp &Pvalue < 0.05) %>%
rename(
LensEnrichment = FoldChange,
LensPvalue = Pvalue,
GeneID = Symbol
) %>%
filter(abs(LensEnrichment) > mle)
deg<-deg %>% filter(Group_1 == gr1 & Group_2 == gr2)
print(nrow(deg))
out<-inner_join(deg, isy, by ='GeneID')
out
}
q2<-query(deg=ag_master, tp="P56", mle = 0, gr1="WT_0_Hours", gr2 = "WT_48_Hours" )
q2<-query(deg=ss_master, tp="P56", mle = 0, gr1="WT_0_Hours", gr2 = "WT_48_Hours" )
q2<-query(deg=ag_master, tp="P56", mle = 0, gr1="FN_0_Hour", gr2 = "FN_48_Hour" )
head(q2)
inner_join(
q1,
q2 %>% select(GeneID, FN_0v48_logFC = logFC)
)
q1<-data=query(tp="P56", mle = 0)
q1<-query(tp="P56", mle = 0)
q2<-query(deg=ag_master, tp="P56", mle = 0, gr1="WT_48_Hours", gr2 = "FN_48_Hours" )
inner_join(
q1,
q2 %>% select(GeneID, FN_0v48_logFC = logFC)
)
interset(q1$GeneID, q2$GeneID)
intersect(q1$GeneID, q2$GeneID)
q2$GeneID
q2$GeneID
q2<-query(deg=ag_master, tp="P56", mle = 0, gr1="WT_48_Hours", gr2 = "FN_48_Hours" )
q1<-query(tp="P56", mle = 0)
q2<-query(deg=ag_master, tp="P56", mle = 0, gr1="WT_48_Hour", gr2 = "FN_48_Hour" )
inner_join(
q1,
q2 %>% select(GeneID, FN_0v48_logFC = logFC)
)
x<-inner_join(
q1,
q2 %>% select(GeneID, FN_0v48_logFC = logFC)
)
qplot(x=logFC, y=LensEnrichment, color=FN_0v48_logFC, data=x) +
labs(y="Log2 Fold Change in the lens at P56", x = "Log2 Fold Change 0 vs 48 Hours Wildtype")
q2<-query(deg=ag_master, tp="P56", mle = 0, gr1="FN_0_Hour", gr2 = "FN_48_Hour" )
x<-inner_join(
q1,
q2 %>% select(GeneID, FN_0v48_logFC = logFC),
by="GeneID"
)
qplot(x=logFC, y=LensEnrichment, color=FN_0v48_logFC, data=x) +
labs(y="Log2 Fold Change in the lens at P56", x = "Log2 Fold Change 0 vs 48 Hours Wildtype")
q1<-query(deg=ag_master %>% filter(FDR < 0.05), tp="P56", mle = 0)
q2<-query(deg=ag_master, tp="P56", mle = 0, gr1="FN_0_Hour", gr2 = "FN_48_Hour" )
x<-inner_join(
q1,
q2 %>% select(GeneID, FN_0v48_logFC = logFC),
by="GeneID"
)
qplot(x=logFC, y=LensEnrichment, color=FN_0v48_logFC, data=x) +
labs(y="Log2 Fold Change in the lens at P56", x = "Log2 Fold Change 0 vs 48 Hours Wildtype")
qplot(x=logFC, y=LensEnrichment, color=FN_0v48_logFC, data=x) +
labs(y="Log2 Fold Change in the lens at P56",
x = "Log2 Fold Change 0 vs 48 Hours Wildtype",
fill = "Log2FC 0 vs 48 Hours FNcKO""
)
qplot(x=logFC, y=LensEnrichment, color=FN_0v48_logFC, data=x) +
labs(y="Log2 Fold Change in the lens at P56",
x = "Log2 Fold Change 0 vs 48 Hours Wildtype",
fill = "Log2FC 0 vs 48 Hours FNcKO"
)
qplot(x=logFC, y=LensEnrichment, color=FN_0v48_logFC, data=x) +
labs(y="Log2 Fold Change in the lens at P56",
x = "Log2 Fold Change 0 vs 48 Hours Wildtype",
fill = "Log2FC 0 vs 48 Hours FNcKO"
)
qplot(x=logFC, y=LensEnrichment, color=FN_0v48_logFC, data=x) +
labs(y="Log2 Fold Change in the lens at P56",
x = "Log2 Fold Change 0 vs 48 Hours Wildtype",
fill = "Log2FC 0 vs 48 Hours FNcKO"
)
qplot(x=logFC, y=LensEnrichment, color=FN_0v48_logFC, data=x) +
labs(y="Log2 Fold Change in the lens at P56",
x = "Log2 Fold Change 0 vs 48 Hours Wildtype",
color = "Log2FC 0 vs 48 Hours FNcKO"
)
