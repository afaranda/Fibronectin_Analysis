
R version 3.5.0 (2018-04-23) -- "Joy in Playing"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # Purpose: Merge RPKM values into pairwise comparison tables
> # Created: March 5, 2019
> # Author: Adam Faranda
> 
> # Setup Environment
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(openxlsx)
> #library(org.Mm.eg.db)
> 
> 
> wd<-getwd()
> outDir<-paste(wd,'DiffExp', sep="/")
> 
> 
> # Import data tables
> setwd(outDir)
> degDataFiles<-list.files(pattern="expressedTags-all.txt$")
> 
> 
> # Function that converts short names to descriptive filenames
> 
> descName<-function(x){
+ 	x<-gsub('WT_0_Hour', 'Wildtype-0-Hour', x)
+ 	x<-gsub('WT_48_Hour', 'Wildtype-48-Hour', x)
+ 	x<-gsub('FN_0_Hour', 'FNcKO-0-Hour', x)
+ 	x<-gsub('FN_48_Hour', 'FNcKO-48-Hour', x)
+ 	
+ }
> ss_master<-data.frame(stringsAsFactors = F)
> bs_master<-data.frame(stringsAsFactors = F)
> 
> for (dataFile in degDataFiles){
+ 	contrast<-gsub("_expressedTags-all.txt$","", dataFile)
+ 
+ 	# Load in DEGs
+ 	dg<-read.table(dataFile, sep="\t", quote="", header=T)
+ 	samples<-names(dg)[grep("_GeneCount.cpm", names(dg))]
+ 
+ 	print(paste("############ FILTER DEG: ",contrast, "##########"))	
+ 
+ 	# Add Columns for Filtering based on statistical Criteria
+ 	print(paste("CPM Present Cols:", paste(samples, collapse=" "), sep= " "))
+ 	dg$Cpm.Present<-apply(dg[, samples], 
+ 		1, function(x) sum(x > 1) >=2
+ 	)
+ 
+ 	# Setup for RPKM Filtering Criteria
+ 	samples<-gsub("_GeneCount.cpm", "_RPKM", samples)
+ 	print(paste("RPKM Filtering Cols:", paste(samples, collapse=" "), sep=" "))
+ 	dg$Avg1<-apply(dg[,samples[1:3]], 1, mean)
+ 	dg$Avg2<-apply(dg[,samples[4:6]], 1, mean)
+ 	
+ 	dg$Group_1<-unlist(strsplit(contrast,"_vs_"))[1]
+ 	dg$Group_2<-unlist(strsplit(contrast,"_vs_"))[2]
+ 	
+ 	#names(dg)[grep("^Avg", names(dg))]<-paste(unlist(strsplit(contrast,"_vs_")), "_Average_RPKM", sep="")
+ 	dg$RPKM_gt2_Either_Cond<-apply(dg[,grep("^Avg", names(dg))], 1, function(x) (x[1] > 2) |(x[2] > 2) )
+ 	dg$RPKM_Diff_gt2<-apply(dg[,grep("^Avg", names(dg))], 1, function(x) abs(x[1]-x[2]) > 2)
+ 	
+ 
+ 
+ 	
+ 	
+ 
+ 	
+ 	# Get Statistically Significant Genes
+ 	ds<-dg %>% filter(abs(logFC) > 1 & FDR < 0.05) # & Cpm.Present == T) -- CPM Filter already applied
+ 
+ 	# Get Biologically significant genes based on the following criteria	
+ 	db<-dg %>% filter(abs(logFC) > 1 & FDR < 0.05 & RPKM_gt2_Either_Cond == T & RPKM_Diff_gt2 == T)
+ 	
+ 
+ 	# Reorder Columns For readability, drop sample specific columns
+ 	cols<-c("GeneID", 
+ 	        "ensembl_gene_id", 
+ 	        "description", 
+ 	        "FC", "logFC", 
+ 	        "FDR", "Group_1", 
+ 	        "Group_2", "Avg1", "Avg2"
+ 	       )
+ 	ss_master<-bind_rows(
+ 	  ss_master,
+ 	  ds<-ds[,cols]
+ 	)
+ 	
+ 	bs_master<-bind_rows(
+ 	  ss_master,
+ 	  db<-db[,cols]
+ 	)
+ }
[1] "############ FILTER DEG:  FN_0_Hour_vs_FN_48_Hour ##########"
[1] "CPM Present Cols: S10_GeneCount.cpm S11_GeneCount.cpm S12_GeneCount.cpm S13_GeneCount.cpm S14_GeneCount.cpm S15_GeneCount.cpm"
[1] "RPKM Filtering Cols: S10_RPKM S11_RPKM S12_RPKM S13_RPKM S14_RPKM S15_RPKM"
[1] "############ FILTER DEG:  WT_0_Hour_vs_FN_0_Hour ##########"
[1] "CPM Present Cols: S1_GeneCount.cpm S2_GeneCount.cpm S3_GeneCount.cpm S10_GeneCount.cpm S11_GeneCount.cpm S12_GeneCount.cpm"
[1] "RPKM Filtering Cols: S1_RPKM S2_RPKM S3_RPKM S10_RPKM S11_RPKM S12_RPKM"
[1] "############ FILTER DEG:  WT_0_Hour_vs_WT_48_Hour ##########"
[1] "CPM Present Cols: S1_GeneCount.cpm S2_GeneCount.cpm S3_GeneCount.cpm S7_GeneCount.cpm S8_GeneCount.cpm S9_GeneCount.cpm"
[1] "RPKM Filtering Cols: S1_RPKM S2_RPKM S3_RPKM S7_RPKM S8_RPKM S9_RPKM"
[1] "############ FILTER DEG:  WT_48_Hour_vs_FN_48_Hour ##########"
[1] "CPM Present Cols: S7_GeneCount.cpm S8_GeneCount.cpm S9_GeneCount.cpm S13_GeneCount.cpm S14_GeneCount.cpm S15_GeneCount.cpm"
[1] "RPKM Filtering Cols: S7_RPKM S8_RPKM S9_RPKM S13_RPKM S14_RPKM S15_RPKM"
There were 24 warnings (use warnings() to see them)
> 
> # Validate GeneID as primary key for each contrast (NOT FOR GLOBAL TABLE)
> 
> print("########## Confirm Unique Gene IDs in each Contrast (Stat)#########")
[1] "########## Confirm Unique Gene IDs in each Contrast (Stat)#########"
> for( i in unique(bs_master$Group_1)){
+   for(j in unique(bs_master$Group_2)){
+     val<-ss_master %>% filter(Group_1 ==i, Group_2==j)
+     if(nrow(val) > 0){
+       print(
+         paste(i,j,
+               "Rows:", nrow(val),
+               "Unique_Genes:", length(unique(val$GeneID))      
+         )
+       )
+     }
+   }
+ }
[1] "FN_0_Hour FN_48_Hour Rows: 2478 Unique_Genes: 2478"
[1] "WT_0_Hour FN_0_Hour Rows: 196 Unique_Genes: 196"
[1] "WT_0_Hour WT_48_Hour Rows: 3503 Unique_Genes: 3503"
[1] "WT_48_Hour FN_48_Hour Rows: 118 Unique_Genes: 118"
> 
> print("########## Confirm Unique Gene IDs in each Contrast (Bio)#########")
[1] "########## Confirm Unique Gene IDs in each Contrast (Bio)#########"
> for( i in unique(bs_master$Group_1)){
+   for(j in unique(bs_master$Group_2)){
+     val<-bs_master %>% filter(Group_1 ==i, Group_2==j)
+     if(nrow(val) > 0){
+       print(
+         paste(i,j,
+               "Rows:", nrow(val),
+               "Unique_Genes:", length(unique(val$GeneID))      
+         )
+       )
+     }
+   }
+ }
[1] "FN_0_Hour FN_48_Hour Rows: 2478 Unique_Genes: 2478"
[1] "WT_0_Hour FN_0_Hour Rows: 196 Unique_Genes: 196"
[1] "WT_0_Hour WT_48_Hour Rows: 3503 Unique_Genes: 3503"
[1] "WT_48_Hour FN_48_Hour Rows: 207 Unique_Genes: 118"
> 
> # Get Overlapping Genes for each meaningful comparison between pairwise contrasts
> comps<-list(
+   `WT0vFN0_AND_WT0vWT48`=c("WT_0_Hour_vs_FN_0_Hour",  "WT_0_Hour_vs_WT_48_Hour"),
+   `WT0vFN0_AND_FN0vFN48`=c("WT_0_Hour_vs_FN_0_Hour","FN_0_Hour_vs_FN_48_Hour"),
+   `WT0vFN0_AND_WT48vFN48`=c("WT_0_Hour_vs_FN_0_Hour",  "WT_48_Hour_vs_FN_48_Hour"),
+   `WT48vFN48_AND_WT0vWT48`=c("WT_48_Hour_vs_FN_48_Hour",  "WT_0_Hour_vs_WT_48_Hour"),
+   `WT48vFN48_AND_FN0vFN48`=c("WT_48_Hour_vs_FN_48_Hour",  "FN_0_Hour_vs_FN_48_Hour"),
+   `FN0vFN48_AND_WT0vWT48`=c("WT_0_Hour_vs_WT_48_Hour",  "FN_0_Hour_vs_FN_48_Hour")
+ )
> 
> for(comp in names(comps)){
+     c<-comps[[comp]]
+     
+     d1<-ss_master %>% filter(	
+           Group_1 == unlist(strsplit(c[1],"_vs_"))[1] & 
+           Group_2 == unlist(strsplit(c[1],"_vs_"))[2]
+     )
+     print(paste("First Contrast:", c[1], "Rows:", nrow(d1)))
+     
+     
+     d2<-ss_master %>% filter(	
+         Group_1 == unlist(strsplit(c[2],"_vs_"))[1] & 
+         Group_2 == unlist(strsplit(c[2],"_vs_"))[2]
+     )
+     
+     print(paste("Second Contrast:", c[2], "Rows:", nrow(d2)))
+    
+     
+     genes<-intersect(d1$GeneID, d2$GeneID)
+     print(paste("Genes In Common:", length(genes)))
+     
+     allResults<-inner_join(
+       d1[d1$GeneID %in% genes,],
+       d2[d2$GeneID %in% genes,],
+       by="GeneID",
+       suffix=c(paste("_",c[1], sep=''), paste("_",c[2], sep=''))
+     )
+     
+     degTable.G1<-data.frame(
+       criteria = c("Statistically Significant", "Biologically Significant"),
+       Total = c(
+         nrow(d1 %>% filter(abs(logFC) > 1, FDR < 0.05)), 
+         nrow(d1 %>% 
+                filter(Avg1 > 2  | Avg2 > 2) %>%
+                filter(abs(Avg1 - Avg2) > 2) %>%
+                filter(abs(logFC) > 1, FDR < 0.05)
+         )
+       ),
+       Up =  c(
+         nrow(d1 %>% filter(logFC > 0, FDR < 0.05)), 
+         nrow(d1 %>% 
+                filter(Avg1 > 2  | Avg2 > 2) %>%
+                filter(abs(Avg1 - Avg2) > 2) %>%
+                filter(logFC > 0, FDR < 0.05)
+         )
+       ),
+       Down =  c(
+         nrow(d1 %>% filter(logFC < 0, FDR < 0.05)), 
+         nrow(d1 %>% 
+                filter(Avg1 > 2  | Avg2 > 2) %>%
+                filter(abs(Avg1 - Avg2) > 2) %>%
+                filter(logFC < 0, FDR < 0.05)
+         )
+       )
+     )
+     
+     
+     degTable.G2<-data.frame(
+       criteria = c("Statistically Significant", "Biologically Significant"),
+       Total = c(
+         nrow(d2 %>% filter(abs(logFC) > 1, FDR < 0.05)), 
+         nrow(d2 %>% 
+                filter(Avg1 > 2  | Avg2 > 2) %>%
+                filter(abs(Avg1 - Avg2) > 2) %>%
+                filter(abs(logFC) > 1, FDR < 0.05)
+         )
+       ),
+       Up =  c(
+         nrow(d2 %>% filter(logFC > 0, FDR < 0.05)), 
+         nrow(d2 %>% 
+                filter(Avg1 > 2  | Avg2 > 2) %>%
+                filter(abs(Avg1 - Avg2) > 2) %>%
+                filter(logFC > 0, FDR < 0.05)
+         )
+       ),
+       Down =  c(
+         nrow(d2 %>% filter(logFC < 0, FDR < 0.05)), 
+         nrow(d2 %>% 
+                filter(Avg1 > 2  | Avg2 > 2) %>%
+                filter(abs(Avg1 - Avg2) > 2) %>%
+                filter(logFC < 0, FDR < 0.05)
+         )
+       )
+     )
+     
+     print(degTable.G1)
+     print(degTable.G2)
+   
+ 
+     d1<-d1[,setdiff(colnames(d1), c("Group_1", "Group_2"))]
+     d2<-d2[,setdiff(colnames(d2), c("ensembl_gene_id", "description", "Group_1", "Group_2"))]
+     
+     
+     d1<-d1[,setdiff(colnames(d1), c("Group_1", "Group_2"))]
+     d2<-d2[,setdiff(colnames(d2), c("ensembl_gene_id", "description", "Group_1", "Group_2"))]
+     
+     allResults<-inner_join(
+       d1[d1$GeneID %in% genes,],
+       d2[d2$GeneID %in% genes,],
+       by="GeneID"
+     )
+     
+     bioResults<-allResults %>%
+       filter(Avg1.x > 2 | Avg2.x > 2) %>%
+       filter(abs(Avg1.x - Avg2.x) > 2) %>%
+       filter(Avg1.y > 2 | Avg2.y > 2) %>%
+       filter(abs(Avg1.y - Avg2.y) > 2)
+      
+     
+     names(allResults)<-gsub("Avg1.x",
+          paste(unlist(strsplit(c[1],"_vs_"))[1], "_Avg_RPKM.g1", sep=""), 
+          names(allResults)
+     )
+     names(allResults)<-gsub("Avg2.x",
+          paste(unlist(strsplit(c[1],"_vs_"))[2], "_Avg_RPKM.g1", sep=""), 
+          names(allResults)
+     )
+     names(allResults)<-gsub("Avg1.y",
+          paste(unlist(strsplit(c[2],"_vs_"))[1], "_Avg_RPKM.g2", sep=""), 
+          names(allResults)
+     )
+     names(allResults)<-gsub("Avg2.y",
+          paste(unlist(strsplit(c[2],"_vs_"))[2], "_Avg_RPKM.g2", sep=""), 
+          names(allResults)
+     )
+ 
+     
+     names(bioResults)<-gsub("Avg1.x",
+                             paste(unlist(strsplit(c[1],"_vs_"))[1], "_Avg_RPKM.g1", sep=""), 
+                             names(bioResults)
+     )
+     names(bioResults)<-gsub("Avg2.x",
+                             paste(unlist(strsplit(c[1],"_vs_"))[2], "_Avg_RPKM.g1", sep=""), 
+                             names(bioResults)
+     )
+     names(bioResults)<-gsub("Avg1.y",
+                             paste(unlist(strsplit(c[2],"_vs_"))[1], "_Avg_RPKM.g2", sep=""), 
+                             names(bioResults)
+     )
+     names(bioResults)<-gsub("Avg2.y",
+                             paste(unlist(strsplit(c[2],"_vs_"))[2], "_Avg_RPKM.g2", sep=""), 
+                             names(bioResults)
+     )
+     
+     tables<-list(
+       `Stat Sig Intersection`=allResults,
+       `Bio Sig Intersection`=bioResults,
+       `SS Down Group_1 Up Group_2`=allResults %>% filter(logFC.x < 0,logFC.y > 0 ),
+       `SS Down Group_1 Down Group_2`=allResults %>% filter(logFC.x < 0,logFC.y < 0 ),
+       `SS Up Group_1 Up Group_2`=allResults %>% filter(logFC.x > 0,logFC.y > 0 ),
+       `SS Up Group_1 Down Group_2`=allResults %>% filter(logFC.x > 0,logFC.y < 0 ),
+       `BS Down Group_1 Up Group_2`=bioResults %>% filter(logFC.x < 0,logFC.y > 0 ),
+       `BS Down Group_1 Down Group_2`=bioResults %>% filter(logFC.x < 0,logFC.y < 0 ),
+       `BS Up Group_1 Up Group_2`=bioResults %>% filter(logFC.x > 0,logFC.y > 0 ),
+       `BS Up Group_1 Down Group_2`=bioResults %>% filter(logFC.x > 0,logFC.y < 0 )
+     )
+       
+     for(t in names(tables)){
+       names(tables[[t]])<-gsub(".x", paste("_", c[1], sep=""), names(tables[[t]]))
+       names(tables[[t]])<-gsub(".y", paste("_", c[2], sep=""), names(tables[[t]]))
+       #print(names(tables[[t]]))
+       print(nrow(tables[[t]]))
+     }
+     names(tables)<-gsub("Group_1", 
+                         unlist(strsplit(comp,"_AND_"))[1], 
+                         names(tables)
+     )
+     names(tables)<-gsub("Group_2", 
+                         unlist(strsplit(comp,"_AND_"))[2], 
+                         names(tables)
+     )
+     print(names(tables))
+     
+     wb<-loadWorkbook("Comparisons.xlsx")
+     writeData(wb, 1, degTable.G1, startCol=2, startRow=32,colNames=F)
+     writeData(wb, 1, degTable.G2, startCol=2, startRow=37,colNames=F)
+     
+     stat.Intersect<-data.frame(
+       U<-c(nrow(tables[[5]]), nrow(tables[[3]])),
+       D<-c(nrow(tables[[6]]), nrow(tables[[4]]))
+     )
+     writeData(wb, 1, stat.Intersect, startCol=3, startRow=42,colNames=F)
+     
+     biol.Intersect<-data.frame(
+       U<-c(nrow(tables[[9]]), nrow(tables[[7]])),
+       D<-c(nrow(tables[[10]]), nrow(tables[[8]]))
+     )
+     writeData(wb, 1, biol.Intersect, startCol=3, startRow=46,colNames=F)
+   
+     tx<-createStyle(numFmt="@")
+     for(i in names(tables)){
+       addWorksheet(wb,i)
+       print(nrow(tables[[i]]))
+       cells<-expand.grid(row=nrow(tables[[i]]), col=grep("GeneID", names(tables[[i]])))
+       addStyle(wb, i, rows=cells$row, cols=cells$col, style=tx)
+       writeData(wb, i, tables[[i]])
+     }
+     saveWorkbook(wb, paste(comp, "Comparison.xlsx", sep="_"), overwrite=T)
+     
+ }
[1] "First Contrast: WT_0_Hour_vs_FN_0_Hour Rows: 196"
[1] "Second Contrast: WT_0_Hour_vs_WT_48_Hour Rows: 3503"
[1] "Genes In Common: 101"
                   criteria Total Up Down
1 Statistically Significant   196 69  127
2  Biologically Significant   128 58   70
                   criteria Total   Up Down
1 Statistically Significant  3503 1982 1521
2  Biologically Significant  2507 1569  938
[1] 101
[1] 69
[1] 31
[1] 39
[1] 21
[1] 10
[1] 17
[1] 25
[1] 20
[1] 7
 [1] "Stat Sig Intersection"         "Bio Sig Intersection"         
 [3] "SS Down WT0vFN0 Up WT0vWT48"   "SS Down WT0vFN0 Down WT0vWT48"
 [5] "SS Up WT0vFN0 Up WT0vWT48"     "SS Up WT0vFN0 Down WT0vWT48"  
 [7] "BS Down WT0vFN0 Up WT0vWT48"   "BS Down WT0vFN0 Down WT0vWT48"
 [9] "BS Up WT0vFN0 Up WT0vWT48"     "BS Up WT0vFN0 Down WT0vWT48"  
[1] 101
[1] 69
[1] 31
[1] 39
[1] 21
[1] 10
[1] 17
[1] 25
[1] 20
[1] 7
Note: zip::zip() is deprecated, please use zip::zipr() instead
[1] "First Contrast: WT_0_Hour_vs_FN_0_Hour Rows: 196"
[1] "Second Contrast: FN_0_Hour_vs_FN_48_Hour Rows: 2478"
[1] "Genes In Common: 79"
                   criteria Total Up Down
1 Statistically Significant   196 69  127
2  Biologically Significant   128 58   70
                   criteria Total   Up Down
1 Statistically Significant  2478 1621  857
2  Biologically Significant  1925 1263  662
[1] 79
[1] 53
[1] 41
[1] 7
[1] 9
[1] 22
[1] 22
[1] 5
[1] 8
[1] 18
 [1] "Stat Sig Intersection"         "Bio Sig Intersection"         
 [3] "SS Down WT0vFN0 Up FN0vFN48"   "SS Down WT0vFN0 Down FN0vFN48"
 [5] "SS Up WT0vFN0 Up FN0vFN48"     "SS Up WT0vFN0 Down FN0vFN48"  
 [7] "BS Down WT0vFN0 Up FN0vFN48"   "BS Down WT0vFN0 Down FN0vFN48"
 [9] "BS Up WT0vFN0 Up FN0vFN48"     "BS Up WT0vFN0 Down FN0vFN48"  
[1] 79
[1] 53
[1] 41
[1] 7
[1] 9
[1] 22
[1] 22
[1] 5
[1] 8
[1] 18
[1] "First Contrast: WT_0_Hour_vs_FN_0_Hour Rows: 196"
[1] "Second Contrast: WT_48_Hour_vs_FN_48_Hour Rows: 118"
[1] "Genes In Common: 23"
                   criteria Total Up Down
1 Statistically Significant   196 69  127
2  Biologically Significant   128 58   70
                   criteria Total Up Down
1 Statistically Significant   118 20   98
2  Biologically Significant    89 16   73
[1] 23
[1] 15
[1] 0
[1] 14
[1] 8
[1] 1
[1] 0
[1] 9
[1] 6
[1] 0
 [1] "Stat Sig Intersection"          "Bio Sig Intersection"          
 [3] "SS Down WT0vFN0 Up WT48vFN48"   "SS Down WT0vFN0 Down WT48vFN48"
 [5] "SS Up WT0vFN0 Up WT48vFN48"     "SS Up WT0vFN0 Down WT48vFN48"  
 [7] "BS Down WT0vFN0 Up WT48vFN48"   "BS Down WT0vFN0 Down WT48vFN48"
 [9] "BS Up WT0vFN0 Up WT48vFN48"     "BS Up WT0vFN0 Down WT48vFN48"  
[1] 23
[1] 15
[1] 0
[1] 14
[1] 8
[1] 1
[1] 0
[1] 9
[1] 6
[1] 0
[1] "First Contrast: WT_48_Hour_vs_FN_48_Hour Rows: 118"
[1] "Second Contrast: WT_0_Hour_vs_WT_48_Hour Rows: 3503"
[1] "Genes In Common: 83"
                   criteria Total Up Down
1 Statistically Significant   118 20   98
2  Biologically Significant    89 16   73
                   criteria Total   Up Down
1 Statistically Significant  3503 1982 1521
2  Biologically Significant  2507 1569  938
[1] 83
[1] 66
[1] 74
[1] 1
[1] 2
[1] 6
[1] 59
[1] 1
[1] 2
[1] 4
 [1] "Stat Sig Intersection"           "Bio Sig Intersection"           
 [3] "SS Down WT48vFN48 Up WT0vWT48"   "SS Down WT48vFN48 Down WT0vWT48"
 [5] "SS Up WT48vFN48 Up WT0vWT48"     "SS Up WT48vFN48 Down WT0vWT48"  
 [7] "BS Down WT48vFN48 Up WT0vWT48"   "BS Down WT48vFN48 Down WT0vWT48"
 [9] "BS Up WT48vFN48 Up WT0vWT48"     "BS Up WT48vFN48 Down WT0vWT48"  
[1] 83
[1] 66
[1] 74
[1] 1
[1] 2
[1] 6
[1] 59
[1] 1
[1] 2
[1] 4
[1] "First Contrast: WT_48_Hour_vs_FN_48_Hour Rows: 118"
[1] "Second Contrast: FN_0_Hour_vs_FN_48_Hour Rows: 2478"
[1] "Genes In Common: 35"
                   criteria Total Up Down
1 Statistically Significant   118 20   98
2  Biologically Significant    89 16   73
                   criteria Total   Up Down
1 Statistically Significant  2478 1621  857
2  Biologically Significant  1925 1263  662
[1] 35
[1] 24
[1] 22
[1] 7
[1] 3
[1] 3
[1] 15
[1] 4
[1] 2
[1] 3
 [1] "Stat Sig Intersection"           "Bio Sig Intersection"           
 [3] "SS Down WT48vFN48 Up FN0vFN48"   "SS Down WT48vFN48 Down FN0vFN48"
 [5] "SS Up WT48vFN48 Up FN0vFN48"     "SS Up WT48vFN48 Down FN0vFN48"  
 [7] "BS Down WT48vFN48 Up FN0vFN48"   "BS Down WT48vFN48 Down FN0vFN48"
 [9] "BS Up WT48vFN48 Up FN0vFN48"     "BS Up WT48vFN48 Down FN0vFN48"  
[1] 35
[1] 24
[1] 22
[1] 7
[1] 3
[1] 3
[1] 15
[1] 4
[1] 2
[1] 3
[1] "First Contrast: WT_0_Hour_vs_WT_48_Hour Rows: 3503"
[1] "Second Contrast: FN_0_Hour_vs_FN_48_Hour Rows: 2478"
[1] "Genes In Common: 2000"
                   criteria Total   Up Down
1 Statistically Significant  3503 1982 1521
2  Biologically Significant  2507 1569  938
                   criteria Total   Up Down
1 Statistically Significant  2478 1621  857
2  Biologically Significant  1925 1263  662
[1] 2000
[1] 1571
[1] 0
[1] 613
[1] 1384
[1] 3
[1] 0
[1] 489
[1] 1080
[1] 2
 [1] "Stat Sig Intersection"          "Bio Sig Intersection"          
 [3] "SS Down FN0vFN48 Up WT0vWT48"   "SS Down FN0vFN48 Down WT0vWT48"
 [5] "SS Up FN0vFN48 Up WT0vWT48"     "SS Up FN0vFN48 Down WT0vWT48"  
 [7] "BS Down FN0vFN48 Up WT0vWT48"   "BS Down FN0vFN48 Down WT0vWT48"
 [9] "BS Up FN0vFN48 Up WT0vWT48"     "BS Up FN0vFN48 Down WT0vWT48"  
[1] 2000
[1] 1571
[1] 0
[1] 613
[1] 1384
[1] 3
[1] 0
[1] 489
[1] 1080
[1] 2
> print(sessionInfo())
R version 3.5.0 (2018-04-23)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Fedora 24 (Server Edition)

Matrix products: default
BLAS: /home/abf/R_3.5.0/lib64/R/lib/libRblas.so
LAPACK: /home/abf/R_3.5.0/lib64/R/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] openxlsx_4.1.0 dplyr_0.8.1   

loaded via a namespace (and not attached):
 [1] tidyselect_0.2.5 compiler_3.5.0   magrittr_1.5     assertthat_0.2.1
 [5] R6_2.4.0         pillar_1.4.0     glue_1.3.1       tibble_2.1.1    
 [9] crayon_1.3.4     Rcpp_1.0.1       zip_2.0.2        pkgconfig_2.0.2 
[13] rlang_0.3.4      purrr_0.3.2     
> setwd(wd)
> rm(list=ls())
> 
> 
> proc.time()
   user  system elapsed 
  8.633   0.156   8.929 
